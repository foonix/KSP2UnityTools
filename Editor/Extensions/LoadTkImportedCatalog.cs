using System.IO;
using System.Linq;
using UnityEditor;
using UnityEngine;
using UnityEngine.AddressableAssets;

namespace ksp2community.ksp2unitytools.editor.Editor.Extensions
{
    public class LoadTkImportedCatalog : AssetPostprocessor
    {
#if TK_ADDRESSABLE
        /// <summary>
        /// Loads an addressable catalog into a resource locator after domain reload.
        /// This makes the path identifiers in the catalog accessible in the editor,
        /// even if the catalog isn't generated by this project's addressable build system.
        /// </summary>
        static void OnPostprocessAllAssets(string[] importedAssets, string[] deletedAssets, string[] movedAssets, string[] movedFromAssetPaths, bool didDomainReload)
        {
            if (!didDomainReload || !KSP2UnityToolsManager.Settings.loadTkImportedCatalog)
            {
                return;
            }

            var tkAssetCatalogPath = KSP2UnityToolsManager.Settings.loadTkImportedCatalogPath;
            var fullPath = Path.Join(Application.dataPath, tkAssetCatalogPath);

            if (!Addressables.ResourceLocators.Select(rl => rl.LocatorId).Contains(fullPath))
            {
                var loadKspCatalogTask = Addressables.LoadContentCatalogAsync(fullPath, true);
                loadKspCatalogTask.WaitForCompletion();
            }
        }
#endif
    }
}
